package gui;

import burp.IBurpExtenderCallbacks;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class UIHowTo extends JPanel {

    private final IBurpExtenderCallbacks callbacks;

    private JTabbedPane mainPanel;
    private JTabbedPane helpContainerPanel;

    private JLabel labelHowTo;
    private JLabel explaination1;
    private JLabel explaination2;
    private JLabel explaination3;
    private JLabel explaination4;
    private JLabel explaination5;
    private JLabel explaination6;

    public UIHowTo(IBurpExtenderCallbacks callbacks) {
        this.callbacks = callbacks;
        setupUI();
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void setupUI() {

        labelHowTo = new JLabel();
        explaination1 = new JLabel();
        explaination2 = new JLabel();
        explaination3 = new JLabel();
        explaination4 = new JLabel();
        explaination5 = new JLabel();
        explaination6 = new JLabel();
        GroupLayout layout;

        labelHowTo.setFont(new Font("Nimbus", Font.PLAIN, 19 ));
        //labelHowTo.setForeground(Color.BLUE);
        labelHowTo.setText("HOW TO USE SVO DETECT");

        //explaination1.setFont(new Font("Dialog", Font.PLAIN, 14 ));
        explaination1.setText("This Plug In is for Checking if your Application is vulnerable for Session Variable Overloading!");

        explaination2.setText("The following Description will help you understand how SVO Detect works");


        layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(labelHowTo)
                                    .addComponent(explaination1)
                                    .addComponent(explaination2))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelHowTo)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(explaination1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(explaination2)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addContainerGap())
        );



    }
}